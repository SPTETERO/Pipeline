확인  - MIPS assembler 포함 (open source 사용 가능

확인    - pipeline visualization : 프로그램을 cycle 단위로 수행하고 정지된 상태에서  회로 상의 모든 component 입출력 값을 시각화 

        - data/branch hazard 해결 ( j 명령의 hazard 도 해결해야 함)

확인    - assemble 된 프로그램은 0x00400024 번지에 load 되고 PC 의 값은 이 값으로 초기화되어 수행이 시작됨.

확인    - $sp 는 0x7ffffe40, $gp 는 0x10008000 로 초기화

클리어  - data memory 는 0으로 초기화하고 .data directive 의 내용에 따라 초기화

확인   - memory 에는 OS code 가 없어도 됨

확인   - memory 의 내용은 전체를 한꺼번에 보여줄 수 없으므로 적절한 방법으로 보여줄 것

확인   - 프로그램의 종료 시점은 따로 정해지지 않음.                   

확인   - exception handling 과 memory hierarchy 는 구현하지 않아도 됨

확인   - visulaization 화면에는 클락 사이클을 0부터 카운트하여 몇번째 사이클인지 보여주는 화면이 포함되어야 함. 

       - 프로그램 소스는 github 에서 download 받아 compile 하여 수행할 수 있는 형태로 공개되어야 함

상관없음   - web service 형태로 구현하는 것도 가능, 이 경우에도 소스가 공개되어야 함

       - github repository 에는 본 프로젝트에 대한 설명 (보고서를 대신함, 소스 코드 설명, 설치, 사용법 설명) 이 포함되어야 함

       